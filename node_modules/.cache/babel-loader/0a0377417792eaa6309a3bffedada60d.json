{"ast":null,"code":"var _jsxFileName = \"/Users/jayjay/Documents/react-practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Header } from './components/layout/Header';\nimport { Content } from './components/layout/Content'; // import { ProjectsProvider, SelectedProjectProvider } from './context';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = _ref => {\n  _s();\n\n  let {\n    darkModeDefault = false\n  } = _ref;\n  const [darkMode, setDarkMode] = useState(darkModeDefault);\n  return (\n    /*#__PURE__*/\n    // <SelectedProjectProvider>\n    // <ProjectsProvider>\n    // <main\n    //   data-testid=\"application\"\n    //   className={darkMode ? 'darkmode' : undefined}\n    // >\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        darkMode: darkMode,\n        setDarkMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) // </main>\n    // </ProjectsProvider>\n    // </SelectedProjectProvider>\n\n  );\n};\n\n_s(App, \"yOZY7lDLuTMaRmUc79/kA3sGV3M=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PropTypes","Header","Content","App","darkModeDefault","darkMode","setDarkMode"],"sources":["/Users/jayjay/Documents/react-practice/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Header } from './components/layout/Header';\nimport { Content } from './components/layout/Content';\n// import { ProjectsProvider, SelectedProjectProvider } from './context';\n\nexport const App = ({ darkModeDefault = false }) => {\n  const [darkMode, setDarkMode] = useState(darkModeDefault);\n\n  return (\n    // <SelectedProjectProvider>\n      // <ProjectsProvider>\n        // <main\n        //   data-testid=\"application\"\n        //   className={darkMode ? 'darkmode' : undefined}\n        // >\n        <div>\n          <Header darkMode={darkMode} setDarkMode={setDarkMode} />\n          <Content />\n        </div>\n        // </main>\n      // </ProjectsProvider>\n    // </SelectedProjectProvider>\n  );\n};\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,OAAT,QAAwB,6BAAxB,C,CACA;;;AAEA,OAAO,MAAMC,GAAG,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAAEC,eAAe,GAAG;EAApB,CAAgC;EAClD,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACK,eAAD,CAAxC;EAEA;IAAA;IACE;IACE;IACE;IACA;IACA;IACA;IACA;MAAA,wBACE,QAAC,MAAD;QAAQ,QAAQ,EAAEC,QAAlB;QAA4B,WAAW,EAAEC;MAAzC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAPN,CAWM;IACF;IACF;;EAbF;AAeD,CAlBM;;GAAMH,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}