{"ast":null,"code":"var _jsxFileName = \"/Users/jayjay/Documents/react-practice/src/components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nimport { IndividualProject } from './IndividualProject';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Projects = _ref => {\n  _s();\n\n  let {\n    activeValue = null\n  } = _ref;\n  const [active, setActive] = useState(activeValue);\n  const {\n    setSelectedProject\n  } = useSelectedProjectValue();\n  const {\n    projects\n  } = useProjectsValue();\n  return projects && projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n    \"data-testid\": \"project-action-parent\",\n    \"data-doc-id\": project.docId,\n    className: active === project.projectId ? 'active sidebar__project' : 'sidebar__project',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"button\",\n      \"data-testid\": \"project-action\",\n      tabIndex: 0,\n      \"aria-label\": `Select ${project.name} as the task project`,\n      onClick: () => {\n        setActive(project.projectId);\n        setSelectedProject(project.projectId);\n      },\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          setActive(project.projectId);\n          setSelectedProject(project.projectId);\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(IndividualProject, {\n        project: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, project.projectId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this));\n};\n\n_s(Projects, \"luqUhN3RH5J52tPZ2BiB3n96wWU=\", false, function () {\n  return [useSelectedProjectValue, useProjectsValue];\n});\n\n_c = Projects;\nProjects.propTypes = {\n  activeValue: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","PropTypes","useSelectedProjectValue","useProjectsValue","IndividualProject","Projects","activeValue","active","setActive","setSelectedProject","projects","map","project","docId","projectId","name","e","key","propTypes","bool"],"sources":["/Users/jayjay/Documents/react-practice/src/components/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nimport { IndividualProject } from './IndividualProject';\n\nexport const Projects = ({ activeValue = null }) => {\n  const [active, setActive] = useState(activeValue);\n  const { setSelectedProject } = useSelectedProjectValue();\n  const { projects } = useProjectsValue();\n\n  return (\n    projects &&\n    projects.map((project) => (\n      <li\n        key={project.projectId}\n        data-testid=\"project-action-parent\"\n        data-doc-id={project.docId}\n        className={\n          active === project.projectId\n            ? 'active sidebar__project'\n            : 'sidebar__project'\n        }\n      >\n        <div\n          role=\"button\"\n          data-testid=\"project-action\"\n          tabIndex={0}\n          aria-label={`Select ${project.name} as the task project`}\n          onClick={() => {\n            setActive(project.projectId);\n            setSelectedProject(project.projectId);\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              setActive(project.projectId);\n              setSelectedProject(project.projectId);\n            }\n          }}\n        >\n          <IndividualProject project={project} />\n        </div>\n      </li>\n    ))\n  );\n};\n\nProjects.propTypes = {\n  activeValue: PropTypes.bool,\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,uBAAT,EAAkCC,gBAAlC,QAA0D,YAA1D;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAA4B;EAAA;;EAAA,IAA3B;IAAEC,WAAW,GAAG;EAAhB,CAA2B;EAClD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACM,WAAD,CAApC;EACA,MAAM;IAAEG;EAAF,IAAyBP,uBAAuB,EAAtD;EACA,MAAM;IAAEQ;EAAF,IAAeP,gBAAgB,EAArC;EAEA,OACEO,QAAQ,IACRA,QAAQ,CAACC,GAAT,CAAcC,OAAD,iBACX;IAEE,eAAY,uBAFd;IAGE,eAAaA,OAAO,CAACC,KAHvB;IAIE,SAAS,EACPN,MAAM,KAAKK,OAAO,CAACE,SAAnB,GACI,yBADJ,GAEI,kBAPR;IAAA,uBAUE;MACE,IAAI,EAAC,QADP;MAEE,eAAY,gBAFd;MAGE,QAAQ,EAAE,CAHZ;MAIE,cAAa,UAASF,OAAO,CAACG,IAAK,sBAJrC;MAKE,OAAO,EAAE,MAAM;QACbP,SAAS,CAACI,OAAO,CAACE,SAAT,CAAT;QACAL,kBAAkB,CAACG,OAAO,CAACE,SAAT,CAAlB;MACD,CARH;MASE,SAAS,EAAGE,CAAD,IAAO;QAChB,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;UACrBT,SAAS,CAACI,OAAO,CAACE,SAAT,CAAT;UACAL,kBAAkB,CAACG,OAAO,CAACE,SAAT,CAAlB;QACD;MACF,CAdH;MAAA,uBAgBE,QAAC,iBAAD;QAAmB,OAAO,EAAEF;MAA5B;QAAA;QAAA;QAAA;MAAA;IAhBF;MAAA;MAAA;MAAA;IAAA;EAVF,GACOA,OAAO,CAACE,SADf;IAAA;IAAA;IAAA;EAAA,QADF,CAFF;AAkCD,CAvCM;;GAAMT,Q;UAEoBH,uB,EACVC,gB;;;KAHVE,Q;AAyCbA,QAAQ,CAACa,SAAT,GAAqB;EACnBZ,WAAW,EAAEL,SAAS,CAACkB;AADJ,CAArB"},"metadata":{},"sourceType":"module"}