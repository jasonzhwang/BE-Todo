{"ast":null,"code":"var _jsxFileName = \"/Users/jayjay/Documents/react-practice/src/context/projects-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useProjects } from '../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectsContext = /*#__PURE__*/createContext();\nexport const ProjectsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    projects,\n    setProjects\n  } = useProjects();\n  return /*#__PURE__*/_jsxDEV(ProjectsContext.Provider, {\n    value: {\n      projects,\n      setProjects\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectsProvider, \"bsCvCBLCBQk2m3FjwiVhCy4hR0I=\", false, function () {\n  return [useProjects];\n});\n\n_c = ProjectsProvider;\nexport const useProjectsValue = () => {\n  _s2();\n\n  return useContext(ProjectsContext);\n};\n\n_s2(useProjectsValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nProjectsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsProvider\");","map":{"version":3,"names":["React","createContext","useContext","PropTypes","useProjects","ProjectsContext","ProjectsProvider","children","projects","setProjects","useProjectsValue","propTypes","node","isRequired"],"sources":["/Users/jayjay/Documents/react-practice/src/context/projects-context.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useProjects } from '../hooks';\n\nexport const ProjectsContext = createContext();\nexport const ProjectsProvider = ({ children }) => {\n  const { projects, setProjects } = useProjects();\n\n  return (\n    <ProjectsContext.Provider value={{ projects, setProjects }}>\n      {children}\n    </ProjectsContext.Provider>\n  );\n};\n\nexport const useProjectsValue = () => useContext(ProjectsContext);\n\nProjectsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,UAA5B;;AAEA,OAAO,MAAMC,eAAe,gBAAGJ,aAAa,EAArC;AACP,OAAO,MAAMK,gBAAgB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAChD,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAA4BL,WAAW,EAA7C;EAEA,oBACE,QAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAE;MAAEI,QAAF;MAAYC;IAAZ,CAAjC;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CARM;;GAAMD,gB;UACuBF,W;;;KADvBE,gB;AAUb,OAAO,MAAMI,gBAAgB,GAAG;EAAA;;EAAA,OAAMR,UAAU,CAACG,eAAD,CAAhB;AAAA,CAAzB;;IAAMK,gB;;AAEbJ,gBAAgB,CAACK,SAAjB,GAA6B;EAC3BJ,QAAQ,EAAEJ,SAAS,CAACS,IAAV,CAAeC;AADE,CAA7B"},"metadata":{},"sourceType":"module"}