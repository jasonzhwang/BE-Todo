{"ast":null,"code":"var _jsxFileName = \"/Users/jayjay/Documents/react-practice/src/components/Checkbox.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { firebase } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Checkbox = _ref => {\n  let {\n    id,\n    taskDesc\n  } = _ref;\n\n  const archiveTask = () => {\n    firebase.firestore().collection('tasks').doc(id).update({\n      archived: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkbox-holder\",\n    \"data-testid\": \"checkbox-action\",\n    onClick: () => archiveTask(),\n    onKeyDown: e => {\n      if (e.key === 'Enter') archiveTask();\n    },\n    \"aria-label\": `Mark ${taskDesc} as done?`,\n    role: \"button\",\n    tabIndex: 0,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Checkbox;\nCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  taskDesc: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","PropTypes","firebase","Checkbox","id","taskDesc","archiveTask","firestore","collection","doc","update","archived","e","key","propTypes","string","isRequired"],"sources":["/Users/jayjay/Documents/react-practice/src/components/Checkbox.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { firebase } from '../firebase';\n\nexport const Checkbox = ({ id, taskDesc }) => {\n  const archiveTask = () => {\n    firebase.firestore().collection('tasks').doc(id).update({\n      archived: true,\n    });\n  };\n\n  return (\n    <div\n      className=\"checkbox-holder\"\n      data-testid=\"checkbox-action\"\n      onClick={() => archiveTask()}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') archiveTask();\n      }}\n      aria-label={`Mark ${taskDesc} as done?`}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <span className=\"checkbox\" />\n    </div>\n  );\n};\n\nCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  taskDesc: PropTypes.string.isRequired,\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAsB;EAAA,IAArB;IAAEC,EAAF;IAAMC;EAAN,CAAqB;;EAC5C,MAAMC,WAAW,GAAG,MAAM;IACxBJ,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,GAAzC,CAA6CL,EAA7C,EAAiDM,MAAjD,CAAwD;MACtDC,QAAQ,EAAE;IAD4C,CAAxD;EAGD,CAJD;;EAMA,oBACE;IACE,SAAS,EAAC,iBADZ;IAEE,eAAY,iBAFd;IAGE,OAAO,EAAE,MAAML,WAAW,EAH5B;IAIE,SAAS,EAAGM,CAAD,IAAO;MAChB,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuBP,WAAW;IACnC,CANH;IAOE,cAAa,QAAOD,QAAS,WAP/B;IAQE,IAAI,EAAC,QARP;IASE,QAAQ,EAAE,CATZ;IAAA,uBAWE;MAAM,SAAS,EAAC;IAAhB;MAAA;MAAA;MAAA;IAAA;EAXF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAtBM;KAAMF,Q;AAwBbA,QAAQ,CAACW,SAAT,GAAqB;EACnBV,EAAE,EAAEH,SAAS,CAACc,MAAV,CAAiBC,UADF;EAEnBX,QAAQ,EAAEJ,SAAS,CAACc,MAAV,CAAiBC;AAFR,CAArB"},"metadata":{},"sourceType":"module"}